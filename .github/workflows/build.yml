name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarQube Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Certifique-se de usar a versão correta do Node.js para seu projeto

      - name: Install dependencies
        run: npm install

      - name: Run Jest tests
        run: npx jest

      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Configure Git user
        run: |
          git config --global user.email "kenkomarinho@gmail.com"
          git config --global user.name "Kenko2002"
      
      #garantindo limpeza de repositorio
      - name: Check for uncommitted changes and commit them
        run: |
          git add .  # Adiciona todas as mudanças
          git commit -m "Commit uncommitted changes before version bump" || echo "No changes to commit"  # Comita as mudanças, se houver

      # Condicional para publicar a nova versão do pacote no npm
      - name: Publish package to npm
        if: success()  # Executa apenas se os testes passarem
        run: |
          # Aumenta a versão do package.json
           npm version patch --no-git-tag-version  # Use `patch`, `minor` ou `major` conforme necessário
          
          # Faça login no NPM
          echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}" > ~/.npmrc
          
          # Publicar no npm
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}  